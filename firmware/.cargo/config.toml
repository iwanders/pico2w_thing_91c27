#
# Cargo Configuration for the https://github.com/rp-rs/rp-hal.git repository.
#
# You might want to make a similar file in your own repository if you are
# writing programs for Raspberry Silicon microcontrollers.
#

# Add aliases for building and running for the ARM and RISC-V targets.
[alias]

# Build arm or riscv
build-arm = "build --bin firmware --target=thumbv8m.main-none-eabihf"
run-arm = "run --bin firmware --target=thumbv8m.main-none-eabihf"

pack_assets = "run --bin pack_assets --target x86_64-unknown-linux-gnu --bin pack_assets --features  std"

unittest = "test --target=x86_64-unknown-linux-gnu --features  std"
[build]
# Set the default target to match the Cortex-M33 in the RP2350
target = "thumbv8m.main-none-eabihf"

# This is the hard-float ABI for Arm mode.
#
# The FPU is enabled by default, and float function arguments use FPU
# registers.
[target.thumbv8m.main-none-eabihf]
# Pass some extra options to rustc, some of which get passed on to the linker.
#
# * linker argument --nmagic turns off page alignment of sections (which saves
#   flash space)
# * linker argument -Tlink.x tells the linker to use link.x as a linker script.
#   This is usually provided by the cortex-m-rt crate, and by default the
#   version in that crate will include a file called `memory.x` which describes
#   the particular memory layout for your specific chip.
# * linker argument -Tdefmt.x also tells the linker to use `defmt.x` as a
#   secondary linker script. This is required to make defmt_rtt work.
rustflags = [
  "-C",
  "link-arg=--nmagic",
  "-C",
  "link-arg=-Tlink.x",
  "-C",
  "link-arg=-Tdefmt.x",
  "-C",
  "target-cpu=cortex-m33",
]

# Use picotool for loading.
#
# Load an elf, skipping unchanged flash sectors, verify it, and execute it
runner = "picotool load -F -u -v -x -t elf"
#runner = "probe-rs run --chip RP235x"

# This is the soft-float ABI for Arm mode.
#
# The FPU is disabled by default, and float function arguments use integer
# registers. Only useful for making the `float_test` example give really bad
# results on the `f32` benchmark.
[target.thumbv8m.main-none-eabi]
# Pass some extra options to rustc. See above for descriptions.
rustflags = [
  "-C",
  "link-arg=--nmagic",
  "-C",
  "link-arg=-Tlink.x",
  "-C",
  "link-arg=-Tdefmt.x",
]

# Use picotool for loading.
#
# Load an elf, skipping unchanged flash sectors, verify it, and execute it
runner = "picotool load  -p 0 -u -v -x -t elf"
#runner = "probe-rs run --chip RP235x"


[target.x86_64-unknown-linux-gnu]


[env]
DEFMT_LOG = "debug"
